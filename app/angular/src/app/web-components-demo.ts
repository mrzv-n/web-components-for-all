import {
  Component,
  CUSTOM_ELEMENTS_SCHEMA,
  ViewEncapsulation,
} from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-nx-welcome',
  standalone: true,
  imports: [CommonModule],
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
  template: `
    <div class="wrapper">
      <div class="container">
        <!--  WELCOME  -->
        <div id="welcome">
          <h1>
            <span>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</span>
            –Ø –¥–µ–º–∫–∞ angular üëã
          </h1>
        </div>
        <br />
        <base-form>
          <base-input
            [value]="form.birthDay"
            label="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"
            (input)="onInput($event, 'birthDay')"
            [error]="!form.birthDay ? '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è' : ''"
          ></base-input>

          <base-input
            [value]="form.fullName"
            label="–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ"
            (input)="onInput($event, 'fullName')"
            [error]="!form.fullName ? '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –§–ò–û' : ''"
          ></base-input>
          <base-input
            [value]="form.phoneNumber"
            label="–¢–µ–ª–µ—Ñ–æ–Ω"
            (input)="onInput($event, 'phoneNumber')"
            [error]="!form.phoneNumber ? '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω' : ''"
          ></base-input>

          <base-selector
            label="–ì–æ—Ä–æ–¥"
            [options]="options"
            [value]="form.state"
            (select-item)="onSelectItem($event, 'state')"
            [error]="!form.state ? '–£–∫–∞–∂–∏—Ç–µ –ì–æ—Ä–æ–¥' : ''"
          ></base-selector>
        </base-form>
      </div>
    </div>
  `,
  styles: [],
  encapsulation: ViewEncapsulation.None,
})
export class WebComponentsDemo {
  options = ['–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ú–æ—Å–∫–≤–∞', '–í–æ—Ä–æ–Ω–µ–∂'];
  form = {
    birthDay: 'sss',
    fullName: '',
    phoneNumber: '',
    state: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
  };

  onInput = (e: Event, fieldName: String) => {
    /* @ts-ignore */
    this.form[fieldName] = (e.target as HTMLInputElement).value;
  };

  onSelectItem = (e: Event, fieldName: String) => {
    console.warn(e, fieldName);
    /* @ts-ignore */
    this.form[fieldName] = (e as CustomEvent).detail.value;
  };
}
